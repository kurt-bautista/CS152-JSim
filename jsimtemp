.include "memory.jsim"

.subckt programcounter clock reset PCSEL[1:0] JT[31:0] offset[31:0] Next[31:0] A[31:0] PCNext[31:0]

    Xmux PCSEL0#32 PCSEL1#32 Next[31:0] offset[31:0] JT[31:0] 0#32 muxOut[31:0] mux4
    Xreset reset#32 muxOut[31:0] 0#32 input[31:0] mux2
    Xregisters input[31:0] clock#32 A[31:0] dreg

    Wfour four[31:0] nrz(0, 5, 10ns, 0ns, 0.1ns, 0.1ns) 4
    Xconn cOut[0:30] cIn[1:31] knex
    .connect 0 cIn0
    Xfa A[31:0] four[31:0] 0#32 cIn[31:0] cOut[31:0] PCNext[31:0] fulladder

.ends

Ws reset nrz(0, 5, 15ns, 0ns, 0.1ns, 0.1ns) 1 0

* Initialize devices

Xpc clk4 reset PCSEL[1:0] RD1d[31:0] offset[31:0] Next[31:0] A[31:0] Next[31:0] programcounter
Xcu D[31:26] Z PCSEL[1:0] RA2SEL BSEL WDSEL[1:0] ALUFN[5:0] Wr WERF
Xim A[31:0] D[31:0] instructionmemory
Xdm clk4 ALUOut[31:0] RD2d[31:0] Wr RD[31:0] datamemory
Xreg clk4 WDSELOut[31:0] WERF D[25:21] D[20:16] RA2SELOut[4:0] RD1d[31:0] RD2d[31:0] registers
Xalu RD1d[31:0] BSELOut[31:0] ALUFN[5:0] ALUOut[31:0] ALU32
Xra2sel RA2SEL D[15:11] D[25:21] RA2SELOut[31:0] mux2
Xbsel BSEL RD2d[31:0] D[15:0] BSELOut[31:0] mux2 //Fix D
Xwdsel WDSEL0#32 WDSEL1#32 Next[31:0] ALUOut[31:0] RD[31:0] 0#32 WDSELOut[31:0] mux4

.tran 500ns
.plot reset
.plot clk4